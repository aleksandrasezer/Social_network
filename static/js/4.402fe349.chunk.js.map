{"version":3,"sources":["components/dialogs/messages/message/newMessage/NewMessage.tsx","components/dialogs/messages/message/newMessage/NewMessage.module.css","components/dialogs/Dialogs.module.css","components/dialogs/messages/Messages.module.css","components/dialogs/messages/message/Message.module.css","components/dialogs/Dialog/Dialog.module.css","components/dialogs/messages/message/Message.tsx","components/dialogs/messages/Messages.tsx","assets/images/morty.png","components/dialogs/Dialog/Dialog.tsx","components/dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/dialogs/DialogsContainer.tsx"],"names":["maxLength5000","maxLengthCreator","reduxForm","form","props","className","s","newMessageForm","onSubmit","handleSubmit","placeholder","name","component","Textarea","validate","required","module","exports","Message","message","Messages","messagesItems","messages","map","el","id","messageText","console","log","messagesContainer","formData","addMessage","Dialog","dialog","avatar","src","morty","alt","activeClassName","activeDialog","to","Dialogs","dialogsItems","dialogs","newMessageText","addMessageAC","mapStateToProps","state","isAuth","auth","compose","connect","dialogsPage","Component","restProps"],"mappings":"wHAAA,8EAWMA,EAAgBC,YAAiB,KAqBxBC,gBAA+B,CAACC,KAAM,WAAtCD,EAnBuD,SAACE,GAEnE,OACI,qBAAKC,UAAWC,IAAEC,eAAlB,SACI,uBAAMC,SAAUJ,EAAMK,aAAtB,UACI,8BACI,cAAC,IAAD,CAAOC,YAAa,UACbC,KAAM,UACNC,UAAWC,IACXC,SAAU,CAACC,IAAUf,OAGhC,8BACI,cAAC,IAAD,8B,oBCzBpBgB,EAAOC,QAAU,CAAC,eAAiB,qC,oBCAnCD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,SAAW,6B,oBCArFD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,8GCe5CC,MARf,SAAiBd,GACb,OACI,qBAAKC,UAAWC,IAAEa,QAAlB,SACKf,EAAMe,W,SCyBJC,MAxBf,SAAkBhB,GAEV,IAAIiB,EAAgBjB,EAAMkB,SAASC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAqBC,GAAID,EAAGC,GAAIN,QAASK,EAAGE,aAA9BF,EAAGC,OAQpE,OAPAE,QAAQC,IAAIxB,EAAMkB,UAQd,sBAAKjB,UAAWC,IAAEuB,kBAAlB,UACI,qBAAKxB,UAAWC,IAAEgB,SAAlB,SACKD,IAGL,cAAC,IAAD,CAAab,SAXA,SAACsB,GAElB1B,EAAM2B,WAAWD,EAASX,gB,0BCnBnB,MAA0B,kCCwB1Ba,MAdf,SAAgB5B,GACZ,OACI,8BAEI,sBAAKC,UAAWC,IAAE2B,OAAlB,UACI,qBAAK5B,UAAWC,IAAE4B,OAAlB,SACI,qBAAKC,IAAKC,EAAOC,IAAI,aAEzB,cAAC,IAAD,CAASC,gBAAiBhC,IAAEiC,aAAcC,GAAE,mBAAcpC,EAAMqB,IAAhE,SAAuErB,EAAMO,aCc9E8B,EAnB6B,SAACrC,GAEzC,IAAIsC,EAAetC,EAAMuC,QAAQpB,KAAI,SAACC,GAAD,OAAoB,cAAC,EAAD,CAAoBC,GAAID,EAAGC,GAAId,KAAMa,EAAGb,MAA3Ba,EAAGC,OAEzE,OAEI,sBAAKpB,UAAWC,IAAEqC,QAAlB,UACI,qBAAKtC,UAAWC,IAAEoC,aAAlB,SACKA,IAEL,qBAAKrC,UAAWC,IAAEgB,SAAlB,SACI,cAAC,EAAD,CAAUA,SAAUlB,EAAMkB,SAChBsB,eAAgBxC,EAAMwC,eACtBb,WAAY3B,EAAMyC,qB,uCCjBxCC,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,aCIZE,sBAA6BC,aAPtB,SAACJ,GACnB,MAAO,CACHJ,QAASI,EAAMK,YAAYT,QAC3BrB,SAAUyB,EAAMK,YAAY9B,YAIiC,CAACuB,oBDA/D,SAA6BQ,GAUhC,OAAOF,YAAQL,EAARK,EARP,SAA2B/C,GAA2B,IAC3C4C,EAAwB5C,EAAxB4C,OAAWM,EAD+B,YAClBlD,EADkB,YAEjD,OAAK4C,EAGE,cAACK,EAAD,eAAeC,IAFX,cAAC,IAAD,CAAUd,GAAG,gBCLjBU,CAAyFT","file":"static/js/4.402fe349.chunk.js","sourcesContent":["import {maxLengthCreator, required} from \"../../../../../validators/validators\";\r\nimport React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../common/formControls/FormControls\";\r\nimport {Button} from \"../../../../Button/Button\";\r\nimport s from \"./NewMessage.module.css\";\r\n\r\nexport type MessageFormDataType = {\r\n    message: string\r\n}\r\n\r\nconst maxLength5000 = maxLengthCreator(5000)\r\n\r\nconst MessageForm: React.FC<InjectedFormProps<MessageFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <div className={s.newMessageForm}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={'message'}\r\n                           name={'message'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5000]}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Button>Send</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default reduxForm<MessageFormDataType>({form: 'message'})(MessageForm)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageForm\":\"NewMessage_newMessageForm__3B_Fo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3laYm\",\"dialogsItems\":\"Dialogs_dialogsItems__3j9ay\",\"messages\":\"Dialogs_messages__12P48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3m2Tc\",\"messages\":\"Messages_messages__3dJpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2W_-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1spPm\",\"avatar\":\"Dialog_avatar__2orif\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Messages.module.css\";\r\nimport Message from \"./message/Message\";\r\nimport {MessageType} from \"../../../types/types\";\r\nimport MessageForm, {MessageFormDataType} from \"./message/newMessage/NewMessage\";\r\n\r\ntype MessagesPropsType = {\r\n    messages: MessageType[]\r\n    newMessageText: string\r\n    addMessage: (message: string) => void\r\n}\r\n\r\nfunction Messages(props: MessagesPropsType) {\r\n\r\n        let messagesItems = props.messages.map((el) => <Message key={el.id} id={el.id} message={el.messageText}/>)\r\n    console.log(props.messages)\r\n\r\n    const onAddMessage = (formData: MessageFormDataType) => {\r\n\r\n        props.addMessage(formData.message)\r\n    }\r\n\r\n    return (\r\n        <div className={s.messagesContainer}>\r\n            <div className={s.messages}>\r\n                {messagesItems}\r\n            </div>\r\n\r\n            <MessageForm onSubmit={onAddMessage} />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Messages;","export default __webpack_public_path__ + \"static/media/morty.17d23175.png\";","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport morty from '../../../assets/images/morty.png'\r\n\r\ntype DialogPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nfunction Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.dialog}>\r\n                <div className={s.avatar}>\r\n                    <img src={morty} alt='avatar'/>\r\n                </div>\r\n                <NavLink activeClassName={s.activeDialog} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Messages from \"./messages/Messages\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {DialogType, MessageType} from \"../../types/types\";\r\n\r\ntype DialogsPropsType = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n    newMessageText: string\r\n    addMessageAC: (message: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let dialogsItems = props.dialogs.map((el: DialogType) => <Dialog key={el.id} id={el.id} name={el.name}/>)\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsItems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Messages messages={props.messages}\r\n                          newMessageText={props.newMessageText}\r\n                          addMessage={props.addMessageAC}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {RootState} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {addMessageAC} from \"../../redux/dialogs-reducer\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {addMessageAC}), withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}