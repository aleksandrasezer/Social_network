{"version":3,"sources":["components/dialogs/messages/Messages.module.css","assets/images/bryan_avatar.jpg","redux/profile-reducer.ts","components/navbar/Navbar.module.css","components/dialogs/messages/message/newMessage/NewMessage.tsx","components/Button/Button.module.css","components/common/preload/Preload.module.css","components/video/Video.module.css","components/dialogs/messages/message/Message.module.css","components/dialogs/messages/message/newMessage/NewMessage.module.css","dal/api.ts","components/Button/Button.tsx","components/navbar/Navbar.tsx","redux/auth-reducer.ts","components/login/Login.tsx","redux/app-reducer.ts","assets/images/spotify_icon.png","components/music/Music.tsx","components/video/Video.tsx","hoc/withSuspense.tsx","components/header/Header.tsx","components/dialogs/messages/message/Message.tsx","components/dialogs/messages/Messages.tsx","assets/images/morty.png","components/dialogs/Dialog/Dialog.tsx","redux/dialogs-reducer.ts","hoc/withAuthRedirect.tsx","components/dialogs/Dialogs.tsx","components/users/user/User.tsx","redux/users-reducer.ts","components/common/search-field/SearchField.tsx","components/users/Users.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","validators/validators.ts","components/users/user/User.module.css","components/common/preload/Preload.tsx","components/common/formControls/FormControls.module.css","components/header/Header.module.css","components/users/Users.module.css","components/common/formControls/FormControls.tsx","components/login/Login.module.css","components/music/Music.module.css","components/common/search-field/SearchField.module.css","components/dialogs/Dialogs.module.css","components/dialogs/Dialog/Dialog.module.css"],"names":["module","exports","initialState","posts","id","v1","postText","likesCount","profile","userStatus","profileReducer","state","action","type","filter","p","status","photos","map","newPost","newPostText","deletePostAC","addPostAC","addLikeAC","setUsersStatus","setUserProfileInfo","userId","dispatch","a","profileAPI","getUserProfile","userData","setUserStatus","getUserStatus","response","data","setMyStatus","newStatus","uploadProfilePic","profilePic","uploadPicture","resp","maxLength5000","maxLengthCreator","reduxForm","form","props","className","s","newMessageForm","onSubmit","handleSubmit","placeholder","name","component","Textarea","validate","required","instance","axios","create","withCredentials","baseURL","headers","get","then","put","newPicture","formData","FormData","append","usersAPI","getUsers","currentPage","pageSize","nameSearch","isFollowed","authAPI","getAuthUserData","login","email","password","rememberMe","post","logout","delete","followAPI","followUser","unfollowUser","Button","buttonStyle","disabled","onClick","children","Navbar","navbar","item","activeClassName","activeLink","to","linkName","initState","isAuth","setAuthUserLogin","payload","setAuthUserData","meData","resultCode","maxLength25","LoginReduxForm","Field","Input","error","loginFormError","st","loginItem","Login","useSelector","auth","useDispatch","loginContainer","style","fontWeight","loginResp","message","messages","length","stopSubmit","_error","free","href","target","rel","color","initialized","Music","musicContainer","spotifyText","arrowDown","spotifyIcon","src","spotify","alt","Video","textAlign","embedId","YoutubeEmbed","videoResponsive","width","height","frameBorder","allow","allowFullScreen","title","withSuspense","WrappedComponent","Suspense","fallback","Preload","Header","header","loginBlock","userName","logOut","Message","Messages","messagesItems","el","messageText","console","log","messagesContainer","addMessage","Dialog","dialog","avatar","morty","activeDialog","dialogs","mapStateToProps","Component","withAuthRedirect","dialogsPage","dialogsItems","newMessageText","connect","restProps","User","userBody","avatarAndFollow","small","userPhoto","followed","followingInProgress","some","unfollow","follow","infoContainer","nameSurname","cityCountry","users","totalUsersCount","isFetching","setIsFetching","setNameSearch","setIsFollowed","setFollowingProgress","inProgress","setUsersFromServer","usersData","items","totalUsers","totalCount","_followUnfollow","apiRequest","actionCreator","SearchUsersField","usersPage","formik","useFormik","initialValues","values","searchContainer","followedButton","notFollowedButton","onChange","handleChange","value","Users","pagesCount","Math","ceil","useEffect","usersList","u","bind","paginateContainer","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selectedItem","pageNumber","selected","containerClassName","pagination","active","Profile","React","lazy","ChatPage","SuspendedProfile","SuspendedChatPage","App","isInitialized","app","promise","Promise","all","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profilePage","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","undefined","maxLength","ldsCircle","FormControl","input","meta","child","touched","errorMessage","textareaClass","errorTextfield","errorBlock"],"mappings":"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","file":"static/js/main.70d95582.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3m2Tc\",\"messages\":\"Messages_messages__3dJpS\"};","export default __webpack_public_path__ + \"static/media/bryan_avatar.e2f70dc3.jpg\";","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../dal/api\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), postText: \"Hello there\", likesCount: 8},\r\n        {id: v1(), postText: \"It's cold in here\", likesCount: 12},\r\n        {id: v1(), postText: \"I miss my mom\", likesCount: 35},\r\n    ],\r\n    profile: null as ProfileType | null,\r\n    userStatus: '',\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/DELETE-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts].filter(p => p.id !== action.id)\r\n            }\r\n        case 'PROFILE/SET-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        case 'PROFILE/SET-USERS-STATUS':\r\n            return {...state, userStatus: action.status}\r\n        case 'PROFILE/UPLOAD-PHOTO-SUCCESS':\r\n            //@ts-ignore\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        case 'PROFILE/ADD-LIKE':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts]\r\n                    .map(p => p.id === action.id ? {...p,likesCount: p.likesCount + 1} : p)\r\n            }\r\n        case 'PROFILE/ADD-POST':\r\n            const newPost: PostType = {\r\n                id: v1(),\r\n                postText: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action-creators\r\nexport const deletePostAC = (id: string) => ({type: 'PROFILE/DELETE-POST', id} as const)\r\nexport const addPostAC = (newPostText: string) => ({type: 'PROFILE/ADD-POST', newPostText} as const)\r\nexport const addLikeAC = (id: string) => ({type: 'PROFILE/ADD-LIKE', id} as const)\r\nconst setUsersProfile = (profile: ProfileType | null) => ({type: 'PROFILE/SET-PROFILE', profile} as const)\r\nconst setUsersStatus = (status: string) => ({type: 'PROFILE/SET-USERS-STATUS', status} as const)\r\nconst uploadPhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/UPLOAD-PHOTO-SUCCESS', photos} as const)\r\n\r\n//thunk-creators\r\nexport const setUserProfileInfo = (userId: number): AppThunk => async (dispatch) => {\r\n    const userData = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUsersProfile(userData))\r\n}\r\nexport const setUserStatus = (userId: number): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    if (response.status === 200) {\r\n        dispatch(setUsersStatus(response.data))\r\n    }\r\n}\r\nexport const setMyStatus = (newStatus: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.setMyStatus(newStatus)\r\n    if (response.status === 200) {\r\n        dispatch(setUsersStatus(newStatus))\r\n    }\r\n}\r\nexport const uploadProfilePic = (profilePic: File): AppThunk => async (dispatch) => {\r\n    const resp = await profileAPI.uploadPicture(profilePic)\r\n    if (resp.status === 200) {\r\n       dispatch(uploadPhotoSuccess(resp.data.data.photos))\r\n    }\r\n}\r\n\r\n//types\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setUsersStatus>\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof addLikeAC>\r\n    | ReturnType<typeof uploadPhotoSuccess>\r\ntype InitialStateType = typeof initialState\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30T44\",\"linkName\":\"Navbar_linkName__juEzS\",\"item\":\"Navbar_item__1pQ3u\",\"activeLink\":\"Navbar_activeLink__3A5tg\"};","import {maxLengthCreator, required} from \"../../../../../validators/validators\";\r\nimport React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../common/formControls/FormControls\";\r\nimport {Button} from \"../../../../Button/Button\";\r\nimport s from \"./NewMessage.module.css\";\r\n\r\nexport type MessageFormDataType = {\r\n    message: string\r\n}\r\n\r\nconst maxLength5000 = maxLengthCreator(5000)\r\n\r\nconst MessageForm: React.FC<InjectedFormProps<MessageFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <div className={s.newMessageForm}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={'message'}\r\n                           name={'message'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5000]}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Button>Send</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default reduxForm<MessageFormDataType>({form: 'message'})(MessageForm)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"Button_buttonStyle__3AyUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsCircle\":\"Preload_ldsCircle__3haJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoResponsive\":\"Video_videoResponsive__q7vYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2W_-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageForm\":\"NewMessage_newMessageForm__3B_Fo\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n        headers: {\r\n            \"API-KEY\": \"4f348a4d-b27b-44e2-b016-551b13e8fd56\",\r\n        }\r\n    })\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    setMyStatus(newStatus: string) {\r\n        return instance.put('profile/status', {status: newStatus})\r\n    },\r\n    uploadPicture(newPicture: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", newPicture)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, nameSearch: string, isFollowed: '' | boolean) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${nameSearch}&friend=${isFollowed}`)\r\n        .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthUserData() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\"\r\nimport s from './Button.module.css'\r\n\r\nexport function Button(props: DefaultButtonPropsType) {\r\n    return (\r\n        <span className={s.buttonStyle}>\r\n        <button disabled={props.disabled}\r\n                onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n        </span>\r\n    )\r\n}\r\n\r\n//types\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/profile\">\r\n                    <div className={s.linkName}>Profile</div>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/dialogs\">\r\n                    <div className={s.linkName}>Messages</div>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/users'>\r\n                    <div className={s.linkName}>Users</div>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/chat'>\r\n                    <div className={s.linkName}>Chat</div>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/music'>\r\n                    <div className={s.linkName}>Music</div>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to='/video'>\r\n                    <div className={s.linkName}>Video</div>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {authAPI} from \"../dal/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nconst initState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitStateType = initState, action: AuthActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_USER_DATA':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst setAuthUserLogin = (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET_USER_DATA',\r\n        payload: {userId, login, email, isAuth}\r\n    } as const\r\n}\r\n\r\n//thunk\r\nexport const setAuthUserData = (): AppThunk => async (dispatch) => {\r\n    const meData = await authAPI.getAuthUserData()\r\n    if (meData.resultCode === 0) {\r\n        const {id, login, email} = meData.data\r\n        dispatch(setAuthUserLogin(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean = false): AppThunk => async (dispatch) => {\r\n    const loginResp = await authAPI.login(email, password, rememberMe)\r\n    if (loginResp.data.resultCode === 0) {\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        let message = loginResp.data.messages.length > 0 ? loginResp.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    const logoutResp = await authAPI.logout()\r\n    if (logoutResp.data.resultCode === 0) {\r\n        dispatch(setAuthUserLogin(null, null, null, false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitStateType = typeof initState\r\nexport type AuthActionsType = ReturnType<typeof setAuthUserLogin>\r\n\r\n","import React from \"react\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\nimport {Input} from \"../common/formControls/FormControls\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport s from \"../common/formControls/FormControls.module.css\";\r\nimport st from './Login.module.css'\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required, maxLength25]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} type='password' name={'password'} component={Input} validate={[required, maxLength25]}/>\r\n            </div>\r\n            {props.error && <div className={s.loginFormError}>\r\n                {props.error}\r\n            </div>}\r\n            <div className={st.loginItem}>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/> remember me\r\n            </div>\r\n            <div className={st.loginItem}>\r\n                <Button>Login</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nexport const Login = () => {\r\n\r\n    const isAuth = useSelector<RootState, boolean>(state => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div className={st.loginContainer}>\r\n        <h1 style={{fontWeight: 'bold'}}>Sign in here</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n        <div className={st.free}>\r\n            To log in get registered <a href='https://social-network.samuraijs.com/'\r\n                                        target='_blank'\r\n                                        rel=\"noreferrer\">here</a><br/>\r\n            or use common test account credentials: <br/>\r\n            Email: <span style={{color: 'black'}}>korelskaia@gmail.com</span> <br/>\r\n            Password: <span style={{color: 'black'}}>s8MjksG_Fus_GdY</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n//types\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n","import {setAuthUserData} from \"./auth-reducer\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nconst initState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initState, action: AppActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst initializingSuccess = () => ({type: 'APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n//thunk\r\nexport const initializeApp = (): AppThunk => (dispatch) => {\r\n    let promise = dispatch(setAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializingSuccess())\r\n        })\r\n}\r\n\r\n//types\r\nexport type AppActionsType = ReturnType<typeof initializingSuccess>\r\ntype InitStateType = typeof initState\r\n\r\n","export default __webpack_public_path__ + \"static/media/spotify_icon.3b2959fb.png\";","import React from \"react\";\r\nimport s from './Music.module.css'\r\nimport spotify from '../../assets/images/spotify_icon.png'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div className={s.musicContainer}>\r\n            <div className={s.spotifyText}>\r\n                Check out my Spotify Playlist!\r\n                <span className={s.arrowDown}></span>\r\n            </div>\r\n            <div className={s.spotifyIcon}>\r\n                <a href='https://open.spotify.com/playlist/6Wx8e7k4P9gP8n1qFopWbV?si=NWuwTF9wSP-CSIa_UGEYoA&utm_source=native-share-menu&dl_branch=1'\r\n                   target=\"_blank\"\r\n                   rel=\"noreferrer\">\r\n                    <img src={spotify} alt='spotify icon'/>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Video.module.css'\r\n\r\nexport const Video = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{color: 'rgba(255,255,255,0.9', textAlign: 'center', fontWeight: 'normal'}}>\r\n                Shrek and Donkey\r\n            </h2>\r\n            <YoutubeEmbed embedId=\"-FtCTW2rVFM\" />\r\n        </>\r\n    )\r\n}\r\n\r\nconst YoutubeEmbed = (props: YoutubeEmbedPropsTypes) => (\r\n    <div className={s.videoResponsive}>\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${props.embedId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n        />\r\n    </div>\r\n)\r\n\r\n//types\r\ntype YoutubeEmbedPropsTypes = {\r\n    embedId: string\r\n}","import React from \"react\"\r\nimport {Preload} from \"../components/common/preload/Preload\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preload />} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {InitStateType, logout} from \"../../redux/auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\n\r\nexport const Header = () => {\r\n\r\n    const data = useSelector<RootState, InitStateType>(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {data.isAuth\r\n                    ? <div>\r\n                        <NavLink to=\"/profile\">\r\n                            <div className={s.userName}>\r\n                                {data.login}\r\n                            </div>\r\n                        </NavLink>\r\n                        <div className={s.logOut} onClick={() => dispatch(logout())}>\r\n                            Log out\r\n                        </div>\r\n                    </div>\r\n                    : <div className={s.login}><NavLink to={'/login'}>Login</NavLink></div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype MessagePropsType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Messages.module.css\";\r\nimport {Message} from \"./message/Message\";\r\nimport {MessageType} from \"../../../types/types\";\r\nimport MessageForm, {MessageFormDataType} from \"./message/newMessage/NewMessage\";\r\n\r\nexport const Messages = (props: MessagesPropsType) => {\r\n\r\n        let messagesItems = props.messages.map((el) => <Message key={el.id} id={el.id} message={el.messageText}/>)\r\n    console.log(props.messages)\r\n\r\n    const onAddMessage = (formData: MessageFormDataType) => {\r\n        props.addMessage(formData.message)\r\n    }\r\n\r\n    return (\r\n        <div className={s.messagesContainer}>\r\n            <div className={s.messages}>\r\n                {messagesItems}\r\n            </div>\r\n            <MessageForm onSubmit={onAddMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype MessagesPropsType = {\r\n    messages: MessageType[]\r\n    addMessage: (message: string) => void\r\n}","export default __webpack_public_path__ + \"static/media/morty.17d23175.png\";","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport morty from '../../../assets/images/morty.png'\r\n\r\ntype DialogPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nfunction Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.dialog}>\r\n                <div className={s.avatar}>\r\n                    <img src={morty} alt='avatar'/>\r\n                </div>\r\n                <NavLink activeClassName={s.activeDialog} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import {v1} from \"uuid\";\r\nimport {DialogType, MessageType} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    messages: [{id: v1(), messageText: \"Hi, how are you?\"},\r\n        {id: v1(), messageText: \"Summer is coming!\"},\r\n        {id: v1(), messageText: \"Yo\"},\r\n        {id: v1(), messageText: \"Yoyo\"}],\r\n    dialogs: [{id: v1(), name: \"Tatiana\"},\r\n        {id: v1(), name: \"Dasha\"},\r\n        {id: v1(), name: \"Victor\"},\r\n        {id: v1(), name: \"Ergun\"},],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/ADD-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), messageText: action.newMessageText}],\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (newMessageText: string) => {\r\n    return {type: 'DIALOGS/ADD-MESSAGE', newMessageText} as const\r\n}\r\n\r\n//types\r\ntype DialogsPageType = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n}\r\nexport type DialogsActionsType = ReturnType<typeof addMessageAC>\r\n","import React, {ComponentType} from \"react\";\r\nimport {RootState} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Messages} from \"./messages/Messages\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {DialogType} from \"../../types/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {addMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst Dialogs: React.FC = () => {\r\n\r\n    const {messages, dialogs} = useSelector((state:RootState) => state.dialogsPage)\r\n    const dispatch = useDispatch()\r\n\r\n    const dialogsItems = dialogs.map((el: DialogType) => <Dialog key={el.id} id={el.id} name={el.name}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsItems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Messages messages={messages}\r\n                          addMessage={(message: string) => dispatch(addMessageAC(message))}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withAuthRedirect(Dialogs);","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/bryan_avatar.jpg\";\r\nimport {Button} from \"../../Button/Button\";\r\n\r\nexport const User = (props: UserPropsType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={s.userBody}>\r\n            <div className={s.avatarAndFollow}>\r\n                <div>\r\n                    <NavLink to={`/profile/${props.id}`}>\r\n                        <img src={props.photos.small || userPhoto}\r\n                             className={s.profilePic}\r\n                             alt='avatar'/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div>\r\n                    {props.followed\r\n                        ? <Button\r\n                            disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            onClick={() => {props.unfollow(props.id) }}>Unfollow</Button>\r\n                        : <Button\r\n                            disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            onClick={() => { props.follow(props.id) }}>Follow</Button>}\r\n                </div>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                <span className={s.nameSurname}>{props.name}</span>\r\n                <span className={s.cityCountry}>{\"u.city\"}, {\"u.country\"}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype UserPropsType = {\r\n    id: number\r\n    photos: any\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    name: string\r\n}","import {followAPI, usersAPI} from \"../dal/api\";\r\nimport {UserType} from \"../types/types\";\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: UsersPageType = {\r\n    users: [],\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    nameSearch: '',\r\n    isFollowed: '',\r\n}\r\n\r\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionsType) => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {...state, users: state.users.map(el => el.id === action.id ? {...el, followed: true} : el)}\r\n        case 'USERS/UNFOLLOW':\r\n            return {...state, users: state.users.map(el => el.id === action.id ? {...el, followed: false} : el)}\r\n        case 'USERS/SET-USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.pageNumber}\r\n        case 'USERS/SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        case 'USERS/SET-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/SET-IS-FOLLOWED':\r\n            return {...state, isFollowed: action.isFollowed}\r\n        case 'USERS/SET-NAME-SEARCH':\r\n            return {...state, nameSearch: action.nameSearch}\r\n        case 'USERS/SET-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.inProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst follow = (id: number) => ({type: 'USERS/FOLLOW', id}) as const\r\nconst unfollow = (id: number) => ({type: 'USERS/UNFOLLOW', id}) as const\r\nconst setUsers = (users: UserType[]) => ({type: 'USERS/SET-USERS', users}) as const\r\nexport const setCurrentPage = (pageNumber: number) => ({type: 'USERS/SET-CURRENT-PAGE', pageNumber}) as const\r\nconst setTotalUsersCount = (totalUsers: number) => ({type: 'USERS/SET-TOTAL-USERS-COUNT', totalUsers}) as const\r\nconst setIsFetching = (isFetching: boolean) => ({type: 'USERS/SET-IS-FETCHING', isFetching}) as const\r\nexport const setNameSearch = (nameSearch: string) => ({type: 'USERS/SET-NAME-SEARCH', nameSearch}) as const\r\nexport const setIsFollowed = (isFollowed: '' | boolean) => ({type: 'USERS/SET-IS-FOLLOWED', isFollowed}) as const\r\nconst setFollowingProgress = (inProgress: boolean, userId: number) => ({\r\n    type: 'USERS/SET-FOLLOWING-PROGRESS',\r\n    inProgress,\r\n    userId\r\n}) as const\r\n\r\n//thunk\r\nexport const setUsersFromServer = (currentPage: number, pageSize: number, nameSearch: string, isFollowed: '' | boolean): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        const usersData = await usersAPI.getUsers(currentPage, pageSize, nameSearch, isFollowed)\r\n        dispatch(setUsers(usersData.items))\r\n        dispatch(setTotalUsersCount(usersData.totalCount))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const _followUnfollow = async (dispatch: Dispatch,\r\n                                      userId: number,\r\n                                      apiRequest: (userId: number) => Promise<any>,\r\n                                      actionCreator: (userId: number) => UsersActionsType) => {\r\n    dispatch(setIsFetching(true))\r\n    dispatch(setFollowingProgress(true, userId))\r\n    const response = await apiRequest(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n    dispatch(setFollowingProgress(false, userId))\r\n    dispatch(setIsFetching(false))\r\n}\r\n\r\nexport const followUser = (userId: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        await _followUnfollow(dispatch, userId, followAPI.followUser.bind(followAPI), follow)\r\n    }\r\n}\r\nexport const unfollowUser = (userId: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        await _followUnfollow(dispatch, userId, followAPI.unfollowUser.bind(followAPI), unfollow);\r\n    }\r\n}\r\n\r\n//types\r\nexport type UsersActionsType = ReturnType<typeof follow> | ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> | ReturnType<typeof setIsFetching> |\r\n    ReturnType<typeof setFollowingProgress> | ReturnType<typeof setNameSearch>\r\n    | ReturnType<typeof setIsFollowed>\r\n\r\nexport type UsersPageType = {\r\n    users: UserType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    nameSearch: string\r\n    isFollowed: '' | boolean\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useFormik} from 'formik'\r\nimport s from './SearchField.module.css'\r\nimport {Button} from \"../../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setIsFollowed, setNameSearch} from \"../../../redux/users-reducer\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\n\r\nexport const SearchUsersField = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isFollowed, nameSearch} = useSelector((state: RootState) => state.usersPage)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nameSearch: '',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNameSearch(values.nameSearch))\r\n        },\r\n    });\r\n\r\n    const showAllHandler = () => {\r\n        dispatch(setNameSearch(''))\r\n        dispatch(setIsFollowed(''))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchContainer}>\r\n\r\n            <div className={s.followed}>\r\n                <span className={s.followedButton}>\r\n                    <Button disabled={isFollowed === true}\r\n                            onClick={() => dispatch(setIsFollowed(true))}>followed</Button></span>\r\n                <span className={s.notFollowedButton}>\r\n                    <Button disabled={isFollowed === false}\r\n                            onClick={() => dispatch(setIsFollowed(false))}>not followed</Button></span>\r\n            </div>\r\n\r\n            <div>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <input\r\n                        id=\"nameSearch\"\r\n                        name=\"nameSearch\"\r\n                        type=\"text\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.nameSearch}\r\n                    />\r\n                    <Button>Search</Button>\r\n                </form>\r\n                <Button onClick={showAllHandler} disabled={isFollowed === '' && nameSearch === ''}>Show all</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {User} from \"./user/User\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {followUser, setCurrentPage, setUsersFromServer, unfollowUser} from \"../../redux/users-reducer\";\r\nimport PaginateBoxView from \"react-paginate\";\r\nimport s from './Users.module.css'\r\nimport {SearchUsersField} from \"../common/search-field/SearchField\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {Preload} from \"../common/preload/Preload\";\r\n\r\nexport const Users = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {users,currentPage,totalUsersCount,pageSize,nameSearch,isFollowed,\r\n        followingInProgress,isFetching} = useSelector((state:RootState) => state.usersPage)\r\n\r\n    //for pagination\r\n    const onPageChanged = (selectedItem: { selected: number}) => {\r\n        dispatch(setCurrentPage(selectedItem.selected))\r\n        dispatch(setUsersFromServer(selectedItem.selected,pageSize,nameSearch,isFollowed))\r\n    }\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    useEffect(() => {\r\n            dispatch(setUsersFromServer(currentPage, pageSize, nameSearch, isFollowed))\r\n        },\r\n        [dispatch, pageSize, currentPage, nameSearch, isFollowed])\r\n\r\n    return <div className={s.usersPage}>\r\n\r\n        {isFetching && <Preload />}\r\n        <SearchUsersField/>\r\n        <div className={s.usersList}>\r\n            {users.map(u => <User key={u.id}\r\n                                        id={u.id}\r\n                                        photos={u.photos}\r\n                                        followed={u.followed}\r\n                                        followingInProgress={followingInProgress}\r\n                                        unfollow={(id: number) => dispatch(unfollowUser(id))}\r\n                                        follow={(id: number) => dispatch(followUser(id))}\r\n                                        name={u.name}/>)}\r\n        </div>\r\n        <div className={s.paginateContainer}>\r\n            <PaginateBoxView previousLabel={\"<\"}\r\n                             nextLabel={\">\"}\r\n                             breakLabel={\"...\"}\r\n                             breakClassName={\"break-me\"}\r\n                             pageCount={pagesCount}\r\n                             pageRangeDisplayed={5}\r\n                             marginPagesDisplayed={2}\r\n                             onPageChange={onPageChanged}\r\n                             containerClassName={`${s.pagination}`}\r\n                             activeClassName={`${s.active}`}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/navbar/Navbar\";\r\nimport {Switch, HashRouter, Route} from \"react-router-dom\";\r\nimport {Login} from \"./components/login/Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {RootState} from \"./redux/redux-store\";\r\nimport {Preload} from \"./components/common/preload/Preload\";\r\nimport {Music} from \"./components/music/Music\";\r\nimport {Video} from \"./components/video/Video\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Header} from \"./components/header/Header\";\r\nimport Dialogs from \"./components/dialogs/Dialogs\";\r\nimport {Users} from \"./components/users/Users\";\r\n\r\nconst Profile = React.lazy(() => import('./components/profile/Profile'))\r\nconst ChatPage = React.lazy(() => import('./components/chat/Chat'))\r\nconst SuspendedProfile = withSuspense(Profile)\r\nconst SuspendedChatPage = withSuspense(ChatPage)\r\n\r\nexport const App = () => {\r\n\r\n    const isInitialized = useSelector<RootState, boolean>(state => state.app.initialized)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <Preload/>\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app_wrapper\">\r\n                <Header/>\r\n                <Navbar/>\r\n                <div className=\"app_wrapper_content\">\r\n                    <Switch>\r\n                        <Route path='/' exact render={() => <SuspendedProfile/>}/>\r\n                        <Route path='/dialogs' render={() => <Dialogs/>}/>\r\n                        <Route path='/profile/:userId?' render={() => <SuspendedProfile/>}/>\r\n                        <Route path='/users' render={() => <Users/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/chat' render={() => <SuspendedChatPage/>}/>\r\n                        <Route path='/video' render={() => <Video/>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {DialogsActionsType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {UsersActionsType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n//types\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    ActionsType\r\n    >\r\ntype ActionsType = AppActionsType\r\n    | AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | UsersActionsType\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store} >\r\n            <App />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const required = (value: string) => {\r\n    return value ? undefined : 'field required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    return value.length > maxLength ? `max length is ${maxLength}` : undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePic\":\"User_profilePic__K3dr4\",\"infoContainer\":\"User_infoContainer__iyodb\",\"userBody\":\"User_userBody__TqBcp\",\"avatarAndFollow\":\"User_avatarAndFollow__309b7\",\"nameSurname\":\"User_nameSurname__2gZzy\",\"cityCountry\":\"User_cityCountry__1VvRG\"};","import React from \"react\";\r\nimport s from './Preload.module.css';\r\n\r\nexport const Preload = () => {\r\n    return <div className={s.ldsCircle}>\r\n        <div></div>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"FormControls_errorBlock__mszNK\",\"errorMessage\":\"FormControls_errorMessage__14Rlm\",\"errorTextfield\":\"FormControls_errorTextfield__2Smx1\",\"loginFormError\":\"FormControls_loginFormError__2oIpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15MjQ\",\"loginBlock\":\"Header_loginBlock__3cBlQ\",\"userName\":\"Header_userName__2Nmf8\",\"logOut\":\"Header_logOut__1oDlu\",\"login\":\"Header_login__1HUbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__15kkH\",\"usersList\":\"Users_usersList__fHZaP\",\"paginateContainer\":\"Users_paginateContainer__2DY-y\",\"pagination\":\"Users_pagination__bcSmr\",\"active\":\"Users_active__Bz_iC\"};","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}: any) => {\r\n    const error = meta.touched && meta.error\r\n    const errorMessage = error ? `${meta.error}` : ' '\r\n    const textareaClass = error ? `${s.errorTextfield}` : undefined\r\n\r\n    return <div className={textareaClass}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        <div className={s.errorBlock}>\r\n            <span className={s.errorMessage}>{errorMessage}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child,...restProps} = props\r\n\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3J4fV\",\"free\":\"Login_free__3cza0\",\"loginItem\":\"Login_loginItem__f1NJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicContainer\":\"Music_musicContainer__vnShs\",\"spotifyIcon\":\"Music_spotifyIcon__3G3TS\",\"spotifyText\":\"Music_spotifyText__3X-PK\",\"arrowDown\":\"Music_arrowDown__o6NCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"SearchField_searchContainer__3409P\",\"followed\":\"SearchField_followed__1_KfI\",\"followedButton\":\"SearchField_followedButton__3Ikf2\",\"notFollowedButton\":\"SearchField_notFollowedButton__2LOij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3laYm\",\"dialogsItems\":\"Dialogs_dialogsItems__3j9ay\",\"messages\":\"Dialogs_messages__12P48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1spPm\",\"avatar\":\"Dialog_avatar__2orif\"};"],"sourceRoot":""}