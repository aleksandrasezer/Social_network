{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/profile/Profile.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/Post/Post.module.css","components/common/likes/Likes.module.css","components/profile/MyPosts/newPost/NewPostForm.module.css","components/profile/ProfileInfo/ProfileStatus.tsx","components/profile/ProfileInfo/ProfileInfo.tsx","components/common/likes/Likes.tsx","components/profile/MyPosts/Post/Post.tsx","components/profile/MyPosts/newPost/NewPostForm.tsx","components/profile/MyPosts/MyPosts.tsx","components/profile/MyPosts/MyPostsContainer.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatus","props","useState","editMode","setEditMode","userStatus","status","setStatus","profileAPI","getUserStatus","then","response","console","log","useEffect","onBlur","setMyStatus","onChange","e","currentTarget","autoFocus","title","onDoubleClick","ProfileInfo","profile","className","s","profileInfoContainer","profilePicBox","src","photos","large","avatar","alt","isOwner","type","target","files","uploadProfilePic","profileInfo","profileName","fullName","profileStatus","Preload","Likes","red","setRed","heartClassName","heart","likesContainer","likesCount","onClick","onLike","Post","userAvatar","post","postBody","postAvatar","postText","likeArea","addLike","id","Button","deletePost","disabled","maxLength60tn","maxLengthCreator","reduxForm","form","newPostForm","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","postButton","MyPosts","myPostsItems","posts","map","el","deletePostAC","addLikeAC","myPosts","formData","addPostAC","newPost","MyPostsContainer","connect","state","profilePage","Profile","isAuth","to","ProfileContainer","userId","this","match","params","authorizedUserId","history","setUserProfileInfo","setUserStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","withRouter","auth"],"mappings":"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","file":"static/js/3.e186c658.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1pk1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__31izu\",\"profilePicBox\":\"ProfileInfo_profilePicBox__1v2ul\",\"profileInfo\":\"ProfileInfo_profileInfo__3MZRw\",\"profileName\":\"ProfileInfo_profileName__21N8p\",\"profileStatus\":\"ProfileInfo_profileStatus__2pzyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__5LJIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1TuW0\",\"postBody\":\"Post_postBody__37jfN\",\"postText\":\"Post_postText__1kRe1\",\"likeArea\":\"Post_likeArea__6q2go\",\"likes\":\"Post_likes__mY4Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"likesContainer\":\"Likes_likesContainer__2K8F7\",\"likesCount\":\"Likes_likesCount__2zRNx\",\"heart\":\"Likes_heart__1Dgfr\",\"red\":\"Likes_red__2pvC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostForm\":\"NewPostForm_newPostForm__1M3y9\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {profileAPI} from \"../../../dal/api\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    userStatus: string\r\n    setMyStatus: (newStatus: string) => void\r\n}\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n\r\n\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.userStatus)\r\n\r\n    const onEditMode = () => setEditMode(true)\r\n    const offEditMode = () => {\r\n        setEditMode(false)\r\n        props.setMyStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    profileAPI.getUserStatus('2').then((response) => console.log(response))\r\n\r\n    useEffect(() => {setStatus(props.userStatus)}, [props.userStatus])\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span title='Double click to edit' onDoubleClick={onEditMode}>{props.userStatus || '---'}</span>\r\n                </div>\r\n\r\n                : <div>\r\n                    <div>\r\n                        <input onBlur={offEditMode}\r\n                               onChange={onStatusChange}\r\n                               autoFocus={true}\r\n                               value={status}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {Preload} from \"../../common/preload/Preload\";\r\nimport avatar from '../../../assets/images/bryan_avatar.jpg'\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../types/types\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n    userStatus: string\r\n    setMyStatus: (newStatus: string) => void\r\n    uploadProfilePic: (photo: File) => void\r\n    isOwner: boolean\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n\r\n    const onChangePhotoHandler = (e: any) => {\r\n        e.target.files.length && props.uploadProfilePic(e.target.files[0])\r\n    }\r\n\r\n    return <>\r\n\r\n        {!props.profile\r\n            ? <Preload/>\r\n\r\n            : <div className={s.profileInfoContainer}>\r\n\r\n                <div className={s.profilePicBox}>\r\n                    <img src={props.profile.photos.large || avatar} alt='profile_avatar'/>\r\n                    {props.isOwner && <input type='file' onChange={onChangePhotoHandler}/>}\r\n                </div>\r\n\r\n                <div className={s.profileInfo}>\r\n\r\n                    <div className={s.profileName}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n\r\n                    <div className={s.profileStatus}>\r\n                    <ProfileStatus userStatus={props.userStatus}\r\n                                   setMyStatus={props.setMyStatus}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React, {useState} from \"react\";\r\nimport s from './Likes.module.css'\r\n\r\ntype LikesPropsType = {\r\n    likesCount: number\r\n    onLike: () => void\r\n}\r\n\r\nexport const Likes = (props: LikesPropsType) => {\r\n\r\n    const [red, setRed] = useState<boolean>(false)\r\n\r\n    const heartClassName = !red ? `${s.heart}` : `${s.red}`\r\n\r\n    const onHeartClickHandler = () => {\r\n        props.onLike()\r\n        setRed(true)\r\n    }\r\n\r\n    return <div className={s.likesContainer}>\r\n\r\n        <div className={s.likesCount}>\r\n            {props.likesCount}\r\n        </div>\r\n\r\n        <div title='Like' className={heartClassName} onClick={onHeartClickHandler}></div>\r\n\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {Button} from \"../../../Button/Button\";\r\nimport {PostType, ProfileType} from \"../../../../types/types\";\r\nimport {Likes} from \"../../../common/likes/Likes\";\r\nimport avatar from '../../../../assets/images/bryan_avatar.jpg'\r\n\r\n\r\ntype PostPropsType = PostType & {\r\n    deletePost: (id: string) => void\r\n    addLike: (id: string) => void\r\n    profile: ProfileType | null\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n\r\n    const userAvatar = props.profile?.photos.large ?? avatar\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.postBody}>\r\n                <div className={s.postAvatar}>\r\n                    <img src={userAvatar} alt='profile_avatar'/>\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.postText}\r\n                </div>\r\n            </div>\r\n            <div className={s.likeArea}>\r\n\r\n                <Likes likesCount={props.likesCount}\r\n                       onLike={() => props.addLike(props.id)}/>\r\n\r\n                <Button onClick={() => props.deletePost(props.id)}\r\n                        disabled={false}> Delete </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/formControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../../validators/validators\";\r\nimport {Button} from \"../../../Button/Button\";\r\nimport s from './NewPostForm.module.css'\r\n\r\nconst maxLength60tn = maxLengthCreator(60000)\r\n\r\nexport type PostFormDataType = {\r\n    newPost: string\r\n}\r\n\r\nconst NewPostForm: React.FC<InjectedFormProps<PostFormDataType>> = (props) => {\r\n    return (\r\n        <div className={s.newPostForm}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={'let people know how you feel'}\r\n                           name={'newPost'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength60tn]}/>\r\n                </div>\r\n\r\n                <span className={s.postButton}>\r\n                    <Button>Post</Button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm<PostFormDataType>({form: 'newPost'})(NewPostForm)","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {PostType, ProfileType} from \"../../../types/types\";\r\nimport NewPostForm, {PostFormDataType} from \"./newPost/NewPostForm\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: PostType[]\r\n    deletePostAC: (id: string) => void\r\n    addPostAC: (newPostText: string) => void\r\n    addLikeAC: (id: string) => void\r\n    profile: ProfileType | null\r\n}\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n    //posts list\r\n    let myPostsItems = props.posts.map((el) => <Post key={el.id}\r\n                                                     id={el.id}\r\n                                                     postText={el.postText}\r\n                                                     likesCount={el.likesCount}\r\n                                                     deletePost={props.deletePostAC}\r\n                                                     addLike={props.addLikeAC}\r\n                                                     profile={props.profile}/>)\r\n\r\n    //handler for add post redux form\r\n    const onAddPost = (formData: PostFormDataType) => {\r\n        props.addPostAC(formData.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n\r\n            <NewPostForm onSubmit={onAddPost} />\r\n\r\n            <div>\r\n                { myPostsItems }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import {addLikeAC, addPostAC, deletePostAC} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer =\r\n    connect(mapStateToProps, {deletePostAC,addPostAC, addLikeAC})(MyPosts)","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    userStatus: string\r\n    setMyStatus: (newStatus: string) => void\r\n    uploadProfilePic: (photo: File) => void\r\n    isAuth: boolean\r\n    isOwner: boolean\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.profile}>\r\n                <ProfileInfo profile={props.profile}\r\n                             isOwner={props.isOwner}\r\n                             userStatus={props.userStatus}\r\n                             setMyStatus={props.setMyStatus}\r\n                             uploadProfilePic={props.uploadProfilePic}/>\r\n            </div>\r\n            <div>\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {setMyStatus, setUserProfileInfo, setUserStatus, uploadProfilePic} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\"\r\nimport {compose} from \"redux\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType\r\n    userStatus: string\r\n    authorizedUserId: string\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    setUserProfileInfo: (userId: string) => void\r\n    setUserStatus: (userId: string) => void\r\n    setMyStatus: (newStatus: string) => void\r\n    uploadProfilePic: (photo: File) => void\r\n}\r\ntype ProfilePropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.setUserProfileInfo(userId)\r\n        this.props.setUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileContainerPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        uploadProfilePic={this.props.uploadProfilePic}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        userStatus={this.props.userStatus}\r\n                        setMyStatus={this.props.setMyStatus}\r\n                        isAuth={this.props.isAuth}/>\r\n    }\r\n}\r\n\r\n\r\n//redux part\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        userStatus: state.profilePage.userStatus,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {setUserProfileInfo, setUserStatus, setMyStatus, uploadProfilePic}),\r\n//    withAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}