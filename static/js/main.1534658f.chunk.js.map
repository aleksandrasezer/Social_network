{"version":3,"sources":["components/navbar/Navbar.module.css","components/profile/MyPosts/Post/Post.module.css","components/dialogs/Dialogs.module.css","components/dialogs/Dialog/Dialog.module.css","components/header/Header.module.css","components/profile/Profile.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/dialogs/messages/Messages.module.css","components/dialogs/messages/Message.module.css","components/header/Header.tsx","components/navbar/Navbar.tsx","components/profile/MyPosts/Post/Post.tsx","redux/state.tsx","components/profile/MyPosts/MyPosts.tsx","components/profile/ProfileInfo/ProfileInfo.tsx","components/profile/Profile.tsx","components/dialogs/messages/Message.tsx","components/dialogs/messages/Messages.tsx","components/dialogs/Dialog/Dialog.tsx","components/dialogs/Dialogs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","navbar","item","activeClassName","activeLink","to","href","Post","props","post","postBody","postAvatar","postText","likeArea","likesCount","store","_state","profilePage","posts","id","newPostText","dialogsPage","messages","v1","messageText","dialogs","name","newMessageBody","dispatch","action","type","newPost","this","push","renderTree","newText","console","log","newMessageText","newMessage","subscriber","observer","getState","updateNewPostTextAC","text","updateNewMessageBodyAC","MyPosts","myPostsItems","map","el","myPosts","onChange","e","currentTarget","value","onClick","ProfileInfo","img","profileInfo","age","aboutMe","Profile","profile","Message","message","Messages","messagesItems","Dialog","dialog","activeDialog","Dialogs","dialogsItems","App","path","render","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.1534658f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2u2Yx\",\"item\":\"Navbar_item__1nEI7\",\"activeLink\":\"Navbar_activeLink__3ePDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__ev8Uz\",\"postBody\":\"Post_postBody__1zq20\",\"postAvatar\":\"Post_postAvatar__3h6-Q\",\"postText\":\"Post_postText__3WMa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2B8uW\",\"dialogsItems\":\"Dialogs_dialogsItems__1_8kw\",\"messages\":\"Dialogs_messages__3eMQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__VVj-X\",\"activeDialog\":\"Dialog_activeDialog__35LJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jfPv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__33M3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2wOLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1Bljo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3K0tN\",\"message\":\"Messages_message__3xkcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1W3KS\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src=\"https://www.clipartkey.com/mpngs/m/67-676200_clip-art-pinterest-rick-and-morty-png.png\" alt=\"logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return <div className={s.navbar}>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/profile\">Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/dialogs\">Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}><a href=\"/feed\">News</a></div>\r\n        <div className={s.item}><a href=\"/music\">Music</a></div>\r\n        <div className={s.item}><a href=\"/settings\">Settings</a></div>\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../redux/state\";\r\n\r\nfunction Post(props: PostType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.postBody}>\r\n                <div className={s.postAvatar}>\r\n                    <img src='https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/10/10a06adc92c1746b48b842c031199d692b1ba623_full.jpg'/>\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.postText}\r\n                </div>\r\n            </div>\r\n            <div className={s.likeArea}>\r\n                <span>likesCount = {props.likesCount}</span>\r\n                <button>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import {v1} from \"uuid\";\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    renderTree: () => void\r\n    subscriber: (observer: () => void) => void\r\n    getState: () => StateType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport type ActionTypes = ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof updateNewPostTextAC> |\r\n    ReturnType<typeof updateNewMessageBodyAC> |\r\n    ReturnType<typeof addMessageAC>\r\nexport type StateType = {\r\n    profilePage: { posts: PostType[], newPostText: string }\r\n    dialogsPage: {\r\n        messages: MessageType[]\r\n        dialogs: DialogType[]\r\n        newMessageBody: string\r\n    }\r\n}\r\nexport type PostType = {\r\n    id: number\r\n    postText: string\r\n    likesCount: number\r\n}\r\nexport type MessageType = {\r\n    id: string\r\n    messageText: string\r\n}\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {\r\n                    id: 1, postText: \"Hello there\", likesCount: 8\r\n                },\r\n                {\r\n                    id: 2, postText: \"It's cold in here\", likesCount: 12\r\n                },\r\n                {\r\n                    id: 3, postText: \"I miss my mom\", likesCount: 35\r\n                },\r\n            ],\r\n            newPostText: 'write something..'\r\n        },\r\n        dialogsPage: {\r\n            messages: [{id: v1(), messageText: \"Hi, how are you?\"},\r\n                {id: v1(), messageText: \"Summer is coming!\"},\r\n                {id: v1(), messageText: \"Yo\"},\r\n                {id: v1(), messageText: \"Yoyo\"}],\r\n            dialogs: [{id: v1(), name: \"Tatiana\"},\r\n                {id: v1(), name: \"Dasha\"},\r\n                {id: v1(), name: \"Victor\"},\r\n                {id: v1(), name: \"Ergun\"},],\r\n            newMessageBody: 'write something:)'\r\n        }\r\n    },\r\n    dispatch(action) {\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost: PostType = {\r\n                id: 5,\r\n                postText: this._state.profilePage.newPostText,\r\n                likesCount: 0\r\n            }\r\n            this._state.profilePage.posts.push(newPost)\r\n            this._state.profilePage.newPostText = ''\r\n            this.renderTree()\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            this._state.profilePage.newPostText = action.newText\r\n            console.log('post is changing..')\r\n            this.renderTree()\r\n        } else if (action.type === 'UPDATE-NEW-MESSAGE-BODY') {\r\n            this._state.dialogsPage.newMessageBody = action.newMessageText\r\n            console.log('message is changing..')\r\n            this.renderTree()\r\n        } else if (action.type === 'ADD-MESSAGE') {\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                messageText: this._state.dialogsPage.newMessageBody\r\n            }\r\n            this._state.dialogsPage.messages.push(newMessage)\r\n            this._state.dialogsPage.newMessageBody = ''\r\n            this.renderTree()\r\n        }\r\n    },\r\n    renderTree() {\r\n        console.log('state changed')\r\n    },\r\n    subscriber(observer) {\r\n        this.renderTree = observer\r\n    },\r\n    getState() {\r\n        return this._state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n    return {type: 'ADD-POST'} as const\r\n}\r\nexport const addMessageAC = () => {\r\n    return {type: 'ADD-MESSAGE'} as const\r\n}\r\nexport const updateNewPostTextAC = (text: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-POST-TEXT',\r\n        newText: text\r\n    } as const\r\n}\r\nexport const updateNewMessageBodyAC = (text: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-BODY',\r\n        newMessageText: text\r\n    } as const\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {ActionTypes, addPostAC, PostType, updateNewPostTextAC} from \"../../../redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n    let myPostsItems = props.posts.map((el) => <Post id={el.id}\r\n                                                     postText={el.postText}\r\n                                                     likesCount={el.likesCount}/>)\r\n    const addPost = () => {\r\n        props.dispatch(addPostAC())\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        if (e.currentTarget) {\r\n            let text = e.currentTarget.value\r\n            props.dispatch(updateNewPostTextAC(text))\r\n            /*alert(text)*/\r\n        }}\r\n\r\n    let onTextClickHandler = () => props.dispatch(updateNewPostTextAC(''))\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    New post\r\n                </div>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              onClick={onTextClickHandler} value={props.newPostText}/>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                { myPostsItems }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\ntype ProfileInfoPropsType = {\r\n    img: string\r\n    name: string\r\n    age: number\r\n    aboutMe: string\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.img} alt='my_profile_avatar'/>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                {props.name} <br/>\r\n                {props.age} y.o.<br/>\r\n                {props.aboutMe}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionTypes, PostType} from \"../../redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.profile}>\r\n                <ProfileInfo\r\n                    img=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4GXs_w8JLLJc_P90Kojd2Pzj649nHhjymWA&usqp=CAU\"\r\n                    name=\"Aleksandra\"\r\n                    age={28}\r\n                    aboutMe=\"Assigned cool at birth\"/>\r\n            </div>\r\n            <div>\r\n                <MyPosts posts={props.posts}\r\n                         dispatch={props.dispatch}\r\n                         newPostText={props.newPostText} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Messages.module.css\";\r\nimport Message from \"./Message\";\r\nimport {\r\n    ActionTypes,\r\n    addMessageAC,\r\n    MessageType,\r\n    updateNewMessageBodyAC\r\n} from \"../../../redux/state\";\r\n\r\ntype MessagesPropsType = {\r\n    messages: MessageType[]\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\n\r\nfunction Messages(props: MessagesPropsType) {\r\n\r\n    const addNewMessage = () => props.dispatch(addMessageAC())\r\n\r\n    const onMessageChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        if (e.currentTarget) {\r\n            let text = e.currentTarget.value\r\n            props.dispatch(updateNewMessageBodyAC(text))\r\n        }\r\n    }\r\n\r\n    let onTextClickHandler = () => props.dispatch(updateNewMessageBodyAC(''))\r\n\r\n    let messagesItems = props.messages.map((el) => <Message id={el.id} message={el.messageText}/>)\r\n    console.log(props.messages)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.messages}>\r\n                {messagesItems}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                        <textarea onChange={onMessageChangeHandler}\r\n                                  onClick={onTextClickHandler}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addNewMessage}> Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nfunction Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.activeDialog} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Messages from \"./messages/Messages\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {ActionTypes, DialogType, MessageType} from \"../../redux/state\";\r\n\r\ntype DialogsPropsType = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\nfunction Dialogs(props: DialogsPropsType) {\r\n    // @ts-ignore\r\n    let dialogsItems = props.dialogs.map((el) => <Dialog id={el.id} name={el.name} />)\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsItems }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Messages messages={props.messages} dispatch={props.dispatch}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Profile from \"./components/profile/Profile\";\nimport Dialogs from \"./components/dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {ActionTypes, StateType} from \"./redux/state\";\n\ntype AppPropsType = {\n    state: StateType\n    dispatch: (action: ActionTypes) => void\n}\nfunction App(props: AppPropsType) {\n    return (\n        <BrowserRouter>\n            <div className=\"app_wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Route path='/dialogs' render = {() => <Dialogs dialogs={props.state.dialogsPage.dialogs}\n                                                                    messages={props.state.dialogsPage.messages}\n                                                                    dispatch={props.dispatch}/>} />\n                    <Route path='/profile' render = {() => <Profile posts={props.state.profilePage.posts}\n                                                                    dispatch={props.dispatch}\n                                                                    newPostText={props.state.profilePage.newPostText} />} />\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/state\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={store.getState()}\n                 dispatch={store.dispatch.bind(store)} />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nstore.subscriber(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}