{"version":3,"sources":["assets/images/bryan_avatar.jpg","redux/profile-reducer.ts","components/navbar/Navbar.module.css","redux/dialogs-reducer.ts","components/Button/Button.module.css","components/common/preload/Preload.module.css","components/video/Video.module.css","dal/api.ts","components/Button/Button.tsx","components/navbar/Navbar.tsx","redux/auth-reducer.ts","assets/images/header.png","components/header/Header.tsx","components/header/HeaderContainer.tsx","components/login/Login.tsx","redux/users-reducer.ts","components/users/user/User.tsx","components/common/search-field/SearchField.tsx","components/users/Users.tsx","redux/users-selectors.ts","components/users/UsersContainer.tsx","redux/app-reducer.ts","assets/images/spotify_icon.png","components/music/Music.tsx","components/video/Video.tsx","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/users/user/User.module.css","components/common/preload/Preload.tsx","components/common/formControls/FormControls.module.css","components/users/Users.module.css","components/header/Header.module.css","components/login/Login.module.css","components/common/search-field/SearchField.module.css","components/music/Music.module.css","validators/validators.ts","components/common/formControls/FormControls.tsx"],"names":["initialState","posts","id","v1","postText","likesCount","profile","userStatus","profileReducer","state","action","type","filter","p","status","photos","map","newPost","newPostText","deletePostAC","addPostAC","addLikeAC","setUsersStatus","setUserProfileInfo","userId","dispatch","a","profileAPI","getUserProfile","userData","setUserStatus","getUserStatus","response","data","setMyStatus","newStatus","uploadProfilePic","profilePic","uploadPicture","resp","module","exports","messages","messageText","dialogs","name","dialogsReducer","newMessageText","addMessageAC","instance","axios","create","withCredentials","baseURL","headers","get","then","put","newPicture","formData","FormData","append","usersAPI","getUsers","currentPage","pageSize","nameSearch","isFollowed","authAPI","getAuthUserData","login","email","password","rememberMe","post","logout","delete","followAPI","followUser","unfollowUser","Button","props","className","s","buttonStyle","disabled","onClick","children","Navbar","navbar","item","activeClassName","activeLink","to","linkName","initState","isAuth","setAuthUserLogin","payload","setAuthUserData","meData","resultCode","Header","header","src","headerPic","alt","loginBlock","userName","logOut","HeadApiContainer","this","React","Component","connect","auth","maxLength25","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","loginFormError","st","loginItem","loginResp","message","length","stopSubmit","_error","loginContainer","style","fontWeight","free","href","target","rel","color","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setIsFetching","setNameSearch","setIsFollowed","setFollowingProgress","inProgress","setUsersFromServer","usersData","items","totalUsers","totalCount","_followUnfollow","apiRequest","actionCreator","User","console","log","userBody","avatarAndFollow","small","userPhoto","followed","some","infoContainer","nameSurname","cityCountry","SearchUsersField","useDispatch","useSelector","usersPage","formik","useFormik","initialValues","values","searchContainer","followedButton","notFollowedButton","onChange","handleChange","value","Users","pagesCount","Math","ceil","useEffect","usersList","u","paginateContainer","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","onPageChanged","containerClassName","pagination","active","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","selectedItem","setCurrentPage","selected","onNextPage","onPrevPage","Preload","compose","bind","pageNumber","initialized","Music","musicContainer","spotifyText","arrowDown","spotifyIcon","spotify","Video","textAlign","embedId","YoutubeEmbed","videoResponsive","width","height","frameBorder","allow","allowFullScreen","title","withSuspense","WrappedComponent","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","ChatPage","SuspendedDialogs","SuspendedProfile","SuspendedChatPage","App","initializeApp","path","exact","render","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profilePage","dialogsPage","el","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","ldsCircle","undefined","maxLength","FormControl","input","meta","child","touched","errorMessage","textareaClass","errorTextfield","errorBlock","Textarea","restProps"],"mappings":"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","file":"static/js/main.20303bcb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bryan_avatar.e2f70dc3.jpg\";","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../dal/api\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v1(), postText: \"Hello there\", likesCount: 8},\r\n        {id: v1(), postText: \"It's cold in here\", likesCount: 12},\r\n        {id: v1(), postText: \"I miss my mom\", likesCount: 35},\r\n    ],\r\n    profile: null as ProfileType | null,\r\n    userStatus: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/DELETE-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts].filter(p => p.id !== action.id)\r\n            }\r\n        case 'PROFILE/SET-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        case 'PROFILE/SET-USERS-STATUS':\r\n            return {...state, userStatus: action.status}\r\n        case 'PROFILE/UPLOAD-PHOTO-SUCCESS':\r\n            //@ts-ignore\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        case 'PROFILE/ADD-LIKE':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts]\r\n                    .map(p => p.id === action.id ? {...p,likesCount: p.likesCount + 1} : p)\r\n            }\r\n        case 'PROFILE/ADD-POST':\r\n            const newPost: PostType = {\r\n                id: v1(),\r\n                postText: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//action-creators\r\n\r\nexport const deletePostAC = (id: string) => ({type: 'PROFILE/DELETE-POST', id} as const)\r\nexport const addPostAC = (newPostText: string) => ({type: 'PROFILE/ADD-POST', newPostText} as const)\r\nexport const addLikeAC = (id: string) => ({type: 'PROFILE/ADD-LIKE', id} as const)\r\nconst setUsersProfile = (profile: ProfileType | null) => ({type: 'PROFILE/SET-PROFILE', profile} as const)\r\nconst setUsersStatus = (status: string) => ({type: 'PROFILE/SET-USERS-STATUS', status} as const)\r\nconst uploadPhotoSuccess = (photos: PhotosType) => ({type: 'PROFILE/UPLOAD-PHOTO-SUCCESS', photos} as const)\r\n\r\n//thunk-creators\r\nexport const setUserProfileInfo = (userId: string): AppThunk => async (dispatch) => {\r\n    const userData = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUsersProfile(userData))\r\n}\r\nexport const setUserStatus = (userId: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.getUserStatus(userId)\r\n    if (response.status === 200) {\r\n        dispatch(setUsersStatus(response.data))\r\n    }\r\n}\r\nexport const setMyStatus = (newStatus: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.setMyStatus(newStatus)\r\n    if (response.status === 200) {\r\n        dispatch(setUsersStatus(newStatus))\r\n    }\r\n}\r\nexport const uploadProfilePic = (profilePic: File): AppThunk => async (dispatch) => {\r\n    const resp = await profileAPI.uploadPicture(profilePic)\r\n    if (resp.status === 200) {\r\n       dispatch(uploadPhotoSuccess(resp.data.data.photos))\r\n    }\r\n}\r\n\r\n//types\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setUsersStatus>\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof addLikeAC>\r\n    | ReturnType<typeof uploadPhotoSuccess>\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30T44\",\"linkName\":\"Navbar_linkName__juEzS\",\"item\":\"Navbar_item__1pQ3u\",\"activeLink\":\"Navbar_activeLink__3A5tg\"};","import {v1} from \"uuid\";\r\nimport {DialogType, MessageType} from \"../types/types\";\r\n\r\ntype DialogsPageType = {\r\n    messages: MessageType[]\r\n    dialogs: DialogType[]\r\n}\r\n\r\nexport type DialogsActionsType = ReturnType<typeof addMessageAC>\r\n\r\n\r\nlet initialState = {\r\n    messages: [{id: v1(), messageText: \"Hi, how are you?\"},\r\n        {id: v1(), messageText: \"Summer is coming!\"},\r\n        {id: v1(), messageText: \"Yo\"},\r\n        {id: v1(), messageText: \"Yoyo\"}],\r\n    dialogs: [{id: v1(), name: \"Tatiana\"},\r\n        {id: v1(), name: \"Dasha\"},\r\n        {id: v1(), name: \"Victor\"},\r\n        {id: v1(), name: \"Ergun\"},],\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/ADD-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), messageText: action.newMessageText}],\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (newMessageText: string) => {\r\n    return {type: 'DIALOGS/ADD-MESSAGE', newMessageText} as const\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"Button_buttonStyle__3AyUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsCircle\":\"Preload_ldsCircle__3haJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoResponsive\":\"Video_videoResponsive__q7vYW\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n        headers: {\r\n            \"API-KEY\": \"4f348a4d-b27b-44e2-b016-551b13e8fd56\",\r\n        }\r\n    })\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getUserStatus(userId: string) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    setMyStatus(newStatus: string) {\r\n        return instance.put('profile/status', {status: newStatus})\r\n    },\r\n    uploadPicture(newPicture: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", newPicture)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, nameSearch: string, isFollowed: '' | boolean) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${nameSearch}&friend=${isFollowed}`)\r\n        .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthUserData() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const followAPI = {\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n\r\n    },\r\n}\r\n\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\"\r\nimport s from './Button.module.css'\r\n\r\n/*type ButtonPropsTypes = {\r\n    onClick: () => void\r\n    disabled: boolean\r\n    children: string\r\n}*/\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nexport function Button(props: DefaultButtonPropsType) {\r\n    return (\r\n        <span className={s.buttonStyle}>\r\n        <button disabled={props.disabled}\r\n                onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n        </span>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return <div className={s.navbar}>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/profile\">\r\n                <div className={s.linkName}>Profile</div>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/dialogs\">\r\n                <div className={s.linkName}>Messages</div>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to='/users'>\r\n                <div className={s.linkName}>Users</div>\r\n\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to='/chat'>\r\n                <div className={s.linkName}>Chat</div>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to='/music'>\r\n                <div className={s.linkName}>Music</div>\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to='/video'>\r\n                <div className={s.linkName}>Video</div>\r\n            </NavLink>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","import {authAPI} from \"../dal/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\n\r\nexport type InitStateType = typeof initState\r\nexport type AuthActionsType = ReturnType<typeof setAuthUserLogin>\r\n\r\nconst initState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitStateType = initState, action: AuthActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_USER_DATA':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst setAuthUserLogin = (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET_USER_DATA',\r\n        payload: {userId, login, email, isAuth}\r\n    } as const\r\n}\r\n\r\n//thunk\r\nexport const setAuthUserData = (): AppThunk => async (dispatch) => {\r\n    const meData = await authAPI.getAuthUserData()\r\n    if (meData.resultCode === 0) {\r\n        const {id, login, email} = meData.data\r\n        dispatch(setAuthUserLogin(id, login, email, true))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean = false): AppThunk => async (dispatch) => {\r\n    const loginResp = await authAPI.login(email, password, rememberMe)\r\n    if (loginResp.data.resultCode === 0) {\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        let message = loginResp.data.messages.length > 0 ? loginResp.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\n\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    const logoutResp = await authAPI.logout()\r\n    if (logoutResp.data.resultCode === 0) {\r\n        dispatch(setAuthUserLogin(null, null, null, false))\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/header.18c2a620.png\";","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {InitStateType} from \"../../redux/auth-reducer\";\r\nimport headerPic from '../../assets/images/header.png'\r\n\r\ntype HeaderPropsType = {\r\n    data: InitStateType\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n    return (\r\n        <div className={s.header}>\r\n\r\n            <img src={headerPic}\r\n                 alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.data.isAuth\r\n\r\n                    ? <div>\r\n                        <NavLink to=\"/profile\">\r\n                            <div className={s.userName}>\r\n                            {props.data.login}\r\n                        </div>\r\n                        </NavLink>\r\n\r\n                        <div className={s.logOut} onClick={props.logout}>\r\n                            Log out\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitStateType, logout} from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\ntype HeaderApiContPropsType = {\r\n    data: InitStateType\r\n    logout: () => void\r\n}\r\n\r\nclass HeadApiContainer extends React.Component<HeaderApiContPropsType> {\r\n\r\n    render() {\r\n        return <Header data={this.props.data} logout={this.props.logout}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        data: state.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeadApiContainer)","import React from \"react\"\r\nimport {Field,InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\nimport {Input} from \"../common/formControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport s from \"../common/formControls/FormControls.module.css\";\r\nimport st from './Login.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'}\r\n                       name={'email'}\r\n                       component={Input}\r\n                       validate={[required, maxLength25]}/>\r\n            </div>\r\n\r\n            <div>\r\n                <Field placeholder={'Password'}\r\n                       type='password'\r\n                       name={'password'}\r\n                       component={Input}\r\n                       validate={[required, maxLength25]}/>\r\n            </div>\r\n\r\n            { props.error && <div className={s.loginFormError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div className={st.loginItem}>\r\n                <Field type={'checkbox'}\r\n                       name={'rememberMe'}\r\n                       component={'input'} /> remember me\r\n            </div>\r\n\r\n            <div className={st.loginItem}>\r\n                <Button onClick={() => {}} disabled={false}>Login</Button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype LoginPropsType = {\r\n    isAuth: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className={st.loginContainer}>\r\n        <h1 style={{fontWeight: 'bold'}}>Sign in here</h1>\r\n\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n        <div className={st.free}>\r\n            To log in get registered <a href='https://social-network.samuraijs.com/' target='_blank' rel=\"noreferrer\">here</a><br/>\r\n            or use common test account credentials: <br/>\r\n            Email: <span style={{color: 'black'}}>free@samuraijs.com</span> <br/>\r\n            Password: <span style={{color: 'black'}}>free</span>\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n export default connect(mapStateToProps, {login})(Login)\r\n","import {followAPI, usersAPI} from \"../dal/api\";\r\nimport {UserType} from \"../types/types\";\r\nimport {AppThunk} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersActionsType = ReturnType<typeof follow> | ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> | ReturnType<typeof setIsFetching> |\r\n    ReturnType<typeof setFollowingProgress> | ReturnType<typeof setNameSearch>\r\n    | ReturnType<typeof setIsFollowed>\r\n\r\nexport type UsersPageType = {\r\n    users: UserType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    nameSearch: string\r\n    isFollowed: '' | boolean\r\n}\r\n\r\nlet initialState: UsersPageType = {\r\n    users: [],\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    nameSearch: '',\r\n    isFollowed: '',\r\n}\r\n\r\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionsType) => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {...state, users: state.users.map(el => el.id === action.id ? {...el, followed: true} : el)}\r\n        case 'USERS/UNFOLLOW':\r\n            return {...state, users: state.users.map(el => el.id === action.id ? {...el, followed: false} : el)}\r\n        case 'USERS/SET-USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.pageNumber}\r\n        case 'USERS/SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        case 'USERS/SET-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USERS/SET-IS-FOLLOWED':\r\n            return {...state, isFollowed: action.isFollowed}\r\n        case 'USERS/SET-NAME-SEARCH':\r\n            return {...state, nameSearch: action.nameSearch}\r\n        case 'USERS/SET-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.inProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst follow = (id: number) => ({type: 'USERS/FOLLOW', id}) as const\r\nconst unfollow = (id: number) => ({type: 'USERS/UNFOLLOW', id}) as const\r\nconst setUsers = (users: UserType[]) => ({type: 'USERS/SET-USERS', users}) as const\r\nexport const setCurrentPage = (pageNumber: number) => ({type: 'USERS/SET-CURRENT-PAGE', pageNumber}) as const\r\nconst setTotalUsersCount = (totalUsers: number) => ({type: 'USERS/SET-TOTAL-USERS-COUNT', totalUsers}) as const\r\nconst setIsFetching = (isFetching: boolean) => ({type: 'USERS/SET-IS-FETCHING', isFetching}) as const\r\nexport const setNameSearch = (nameSearch: string) => ({type: 'USERS/SET-NAME-SEARCH', nameSearch}) as const\r\nexport const setIsFollowed = (isFollowed: '' | boolean) => ({type: 'USERS/SET-IS-FOLLOWED', isFollowed}) as const\r\n\r\nconst setFollowingProgress = (inProgress: boolean, userId: number) => ({\r\n    type: 'USERS/SET-FOLLOWING-PROGRESS',\r\n    inProgress,\r\n    userId\r\n}) as const\r\n\r\n//thunk\r\nexport const setUsersFromServer = (currentPage: number, pageSize: number, nameSearch: string, isFollowed: '' | boolean): AppThunk => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        const usersData = await usersAPI.getUsers(currentPage, pageSize, nameSearch, isFollowed)\r\n        dispatch(setUsers(usersData.items))\r\n        dispatch(setTotalUsersCount(usersData.totalCount))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const _followUnfollow = async (dispatch: Dispatch,\r\n                                      userId: number,\r\n                                      apiRequest: (userId: number) => Promise<any>,\r\n                                      actionCreator: (userId: number) => UsersActionsType) => {\r\n    dispatch(setIsFetching(true))\r\n    dispatch(setFollowingProgress(true, userId))\r\n    const response = await apiRequest(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n    dispatch(setFollowingProgress(false, userId))\r\n    dispatch(setIsFetching(false))\r\n}\r\n\r\nexport const followUser = (userId: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        await _followUnfollow(dispatch, userId, followAPI.followUser.bind(followAPI), follow)\r\n    }\r\n}\r\nexport const unfollowUser = (userId: number): AppThunk => {\r\n    return async (dispatch) => {\r\n        await _followUnfollow(dispatch, userId, followAPI.unfollowUser.bind(followAPI), unfollow);\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/bryan_avatar.jpg\";\r\nimport {Button} from \"../../Button/Button\";\r\n\r\ntype UserPropsType = {\r\n    id: number\r\n    photos: any\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    name: string\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    console.log(props.followingInProgress)\r\n    return (\r\n        <div key={props.id} className={s.userBody}>\r\n            <div className={s.avatarAndFollow}>\r\n                <div>\r\n                    <NavLink to={`/profile/${props.id}`}>\r\n                        <img src={props.photos.small || userPhoto}\r\n                             className={s.profilePic}\r\n                             alt='avatar'/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div>\r\n                    {props.followed\r\n                        ? <Button\r\n                            disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            onClick={() => {props.unfollow(props.id) }}>Unfollow</Button>\r\n                        : <Button\r\n                            disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            onClick={() => { props.follow(props.id) }}>Follow</Button>}\r\n                </div>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                <span className={s.nameSurname}>{props.name}</span>\r\n\r\n                <span className={s.cityCountry}>{\"u.city\"}, {\"u.country\"}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useFormik} from 'formik'\r\nimport s from './SearchField.module.css'\r\nimport {Button} from \"../../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setIsFollowed, setNameSearch} from \"../../../redux/users-reducer\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\n\r\nexport const SearchUsersField = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isFollowed, nameSearch} = useSelector((state: RootState) => state.usersPage)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nameSearch: '',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNameSearch(values.nameSearch))\r\n        },\r\n    });\r\n\r\n    const showAllHandler = () => {\r\n        dispatch(setNameSearch(''))\r\n        dispatch(setIsFollowed(''))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchContainer}>\r\n\r\n            <div className={s.followed}>\r\n                <span className={s.followedButton}>\r\n                    <Button disabled={isFollowed === true}\r\n                            onClick={() => dispatch(setIsFollowed(true))}>followed</Button></span>\r\n                <span className={s.notFollowedButton}>\r\n                    <Button disabled={isFollowed === false}\r\n                            onClick={() => dispatch(setIsFollowed(false))}>not followed</Button></span>\r\n            </div>\r\n\r\n            <div>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <input\r\n                        id=\"nameSearch\"\r\n                        name=\"nameSearch\"\r\n                        type=\"text\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.nameSearch}\r\n                    />\r\n                    <Button>Search</Button>\r\n                </form>\r\n                <Button onClick={showAllHandler} disabled={isFollowed === '' && nameSearch === ''}>Show all</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {User} from \"./user/User\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setUsersFromServer} from \"../../redux/users-reducer\";\r\nimport PaginateBoxView from \"react-paginate\";\r\nimport s from './Users.module.css'\r\nimport {SearchUsersField} from \"../common/search-field/SearchField\";\r\n\r\ntype UsersPropsType = {\r\n    users: UserType[]\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: number[]\r\n    isFetching: boolean\r\n    nameSearch: string\r\n    isFollowed: '' | boolean\r\n    onPageChanged: (selectedItem: { selected: number }) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    pageSize: number\r\n    onNextPage: () => void\r\n    onPrevPage: () => void\r\n}\r\n\r\nexport const Users = ({currentPage, pageSize, totalUsersCount, nameSearch,isFollowed, ...props}: UsersPropsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    useEffect(() => {\r\n            dispatch(setUsersFromServer(currentPage, pageSize, nameSearch, isFollowed))\r\n        },\r\n        [dispatch,pageSize,currentPage,nameSearch,isFollowed])\r\n\r\n    return <div className={s.usersPage}>\r\n\r\n\r\n\r\n        <SearchUsersField />\r\n\r\n        <div className={s.usersList}>\r\n            {props.users.map(u => <User key={u.id}\r\n                                        id={u.id}\r\n                                        photos={u.photos}\r\n                                        followed={u.followed}\r\n                                        followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow}\r\n                                        follow={props.follow}\r\n                                        name={u.name}/>)}\r\n        </div>\r\n\r\n        <div className={s.paginateContainer}>\r\n            <PaginateBoxView previousLabel={\"<\"}\r\n                             nextLabel={\">\"}\r\n                             breakLabel={\"...\"}\r\n                             breakClassName={\"break-me\"}\r\n                             pageCount={pagesCount}\r\n                             pageRangeDisplayed={5}\r\n                             marginPagesDisplayed={2}\r\n                             onPageChange={props.onPageChanged}\r\n                             containerClassName={`${s.pagination}`}\r\n                // subContainerClassName={\"pages pagination\"}\r\n                             activeClassName={`${s.active}`}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import {createSelector} from \"reselect\";\r\nimport {RootState} from \"./redux-store\";\r\n\r\n\r\nconst getUsersSelector = (state: RootState) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state: RootState) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootState) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: RootState) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: RootState) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootState) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const nameSearch = (state: RootState) => {\r\n    return state.usersPage.nameSearch;\r\n}\r\nexport const isFollowed = (state: RootState) => {\r\n    return state.usersPage.isFollowed;\r\n}\r\n","import React from \"react\";\r\nimport {followUser, setCurrentPage, setUsersFromServer, unfollowUser} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preload} from \"../common/preload/Preload\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, isFollowed, nameSearch\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype UsersContainerPropsType = {\r\n    users: UserType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    isFollowed: '' | boolean\r\n    nameSearch: string\r\n    followingInProgress: number[]\r\n    followUser: (id: number) => void\r\n    unfollowUser: (id: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setUsersFromServer: (currentPage: number, pageSize: number, nameSearch: string, isFollowed: '' | boolean) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n    onPageChanged = (selectedItem: { selected: number}) => {\r\n        this.props.setCurrentPage(selectedItem.selected)\r\n        this.props.setUsersFromServer(selectedItem.selected,this.props.pageSize,this.props.nameSearch,this.props.isFollowed)\r\n    }\r\n    onNextPage = () => {\r\n        this.props.setCurrentPage(this.props.currentPage + 1)\r\n    }\r\n    onPrevPage = () => {\r\n        this.props.setCurrentPage(this.props.currentPage - 1)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n\r\n            {this.props.isFetching && <Preload />}\r\n\r\n            <Users users={this.props.users}\r\n                   pageSize={this.props.pageSize}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   nameSearch={this.props.nameSearch}\r\n                   isFollowed={this.props.isFollowed}\r\n                   follow={this.props.followUser}\r\n                   unfollow={this.props.unfollowUser}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   isFetching={this.props.isFetching}\r\n                   onNextPage={this.onNextPage}\r\n                   onPrevPage={this.onPrevPage}\r\n                   />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        users: getUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        nameSearch: nameSearch(state),\r\n        isFollowed: isFollowed(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {unfollowUser, followUser, setCurrentPage, setUsersFromServer}))(UsersContainer)","import {setAuthUserData} from \"./auth-reducer\";\r\nimport {AppThunk} from \"./redux-store\";\r\n\r\nexport type AppActionsType = ReturnType<typeof initializingSuccess>\r\n\r\nlet initState = {\r\n    initialized: false\r\n}\r\n\r\ntype InitStateType = typeof initState\r\n\r\n\r\nexport const appReducer = (state = initState, action: AppActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst initializingSuccess = () => ({type: 'APP/INITIALIZED_SUCCESS'} as const)\r\n\r\n//thunk\r\nexport const initializeApp = (): AppThunk => (dispatch) => {\r\n    let promise = dispatch(setAuthUserData())\r\n    // @ts-ignore\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializingSuccess())\r\n        })\r\n\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/spotify_icon.3b2959fb.png\";","import React from \"react\";\r\nimport s from './Music.module.css'\r\nimport spotify from '../../assets/images/spotify_icon.png'\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div className={s.musicContainer}>\r\n            <div className={s.spotifyText}>\r\n                Check out my Spotify Playlist!\r\n                <span className={s.arrowDown}></span>\r\n            </div>\r\n\r\n            <div className={s.spotifyIcon}>\r\n                <a\r\n                    href='https://open.spotify.com/playlist/6Wx8e7k4P9gP8n1qFopWbV?si=NWuwTF9wSP-CSIa_UGEYoA&utm_source=native-share-menu&dl_branch=1'\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\">\r\n                    <img src={spotify} alt='spotify icon'/>\r\n                </a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Video.module.css'\r\n\r\nexport const Video = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{color: 'rgba(255,255,255,0.9', textAlign: 'center', fontWeight: 'normal'}}>\r\n                Shrek and Donkey\r\n            </h2>\r\n            <YoutubeEmbed embedId=\"-FtCTW2rVFM\" />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\ntype YoutubeEmbedPropsTypes = {\r\n    embedId: string\r\n}\r\n\r\nconst YoutubeEmbed = (props: YoutubeEmbedPropsTypes) => (\r\n    <div className={s.videoResponsive}>\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${props.embedId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n        />\r\n    </div>\r\n);","import React from \"react\"\r\nimport {Preload} from \"../components/common/preload/Preload\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preload />} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {Switch, HashRouter, Route} from \"react-router-dom\";\r\nimport HeadApiContainer from \"./components/header/HeaderContainer\";\r\nimport Login from \"./components/login/Login\";\r\nimport UsersContainer from \"./components/users/UsersContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {RootState} from \"./redux/redux-store\";\r\nimport {Preload} from \"./components/common/preload/Preload\";\r\nimport {Music} from \"./components/music/Music\";\r\nimport {Video} from \"./components/video/Video\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\ntype AppPropsType = {\r\n    initializeApp: () => void\r\n    initialized: boolean\r\n}\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/profile/ProfileContainer'))\r\nconst ChatPage = React.lazy(() => import('./components/chat/Chat'))\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\nconst SuspendedChatPage = withSuspense(ChatPage)\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preload/>\r\n        }\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"app_wrapper\">\r\n                    <HeadApiContainer/>\r\n                    <Navbar/>\r\n                    <div className=\"app_wrapper_content\">\r\n                        <Switch>\r\n                            <Route path='/' exact render={() => <SuspendedProfile/>}/>\r\n                            <Route path='/dialogs' render={() => <SuspendedDialogs/>}/>\r\n                            <Route path='/profile/:userId?' render={() => <SuspendedProfile/>}/>\r\n                            <Route path='/users' render={() => <UsersContainer/>}/>\r\n                            <Route path='/login' render={() => <Login/>}/>\r\n                            <Route path='/music' render={() => <Music/>}/>\r\n                            <Route path='/chat' render={() => <SuspendedChatPage />}/>\r\n                            <Route path='/video' render={() => <Video/>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({initialized: state.app.initialized})\r\n\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App)\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {DialogsActionsType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {UsersActionsType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    ActionsType\r\n    >\r\n\r\ntype ActionsType = AppActionsType\r\n    | AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | UsersActionsType\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store} >\r\n            <App />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePic\":\"User_profilePic__K3dr4\",\"infoContainer\":\"User_infoContainer__iyodb\",\"userBody\":\"User_userBody__TqBcp\",\"avatarAndFollow\":\"User_avatarAndFollow__309b7\",\"nameSurname\":\"User_nameSurname__2gZzy\",\"cityCountry\":\"User_cityCountry__1VvRG\"};","import React from \"react\";\r\nimport s from './Preload.module.css';\r\n\r\nexport const Preload = () => {\r\n    return <div className={s.ldsCircle}>\r\n        <div></div>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"FormControls_errorBlock__mszNK\",\"errorMessage\":\"FormControls_errorMessage__14Rlm\",\"errorTextfield\":\"FormControls_errorTextfield__2Smx1\",\"loginFormError\":\"FormControls_loginFormError__2oIpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__15kkH\",\"usersList\":\"Users_usersList__fHZaP\",\"paginateContainer\":\"Users_paginateContainer__2DY-y\",\"pagination\":\"Users_pagination__bcSmr\",\"active\":\"Users_active__Bz_iC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15MjQ\",\"loginBlock\":\"Header_loginBlock__3cBlQ\",\"userName\":\"Header_userName__2Nmf8\",\"logOut\":\"Header_logOut__1oDlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3J4fV\",\"free\":\"Login_free__3cza0\",\"loginItem\":\"Login_loginItem__f1NJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"SearchField_searchContainer__3409P\",\"followed\":\"SearchField_followed__1_KfI\",\"followedButton\":\"SearchField_followedButton__3Ikf2\",\"notFollowedButton\":\"SearchField_notFollowedButton__2LOij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicContainer\":\"Music_musicContainer__vnShs\",\"spotifyIcon\":\"Music_spotifyIcon__3G3TS\",\"spotifyText\":\"Music_spotifyText__3X-PK\",\"arrowDown\":\"Music_arrowDown__o6NCw\"};","\r\n\r\nexport const required = (value: string) => {\r\n    return value ? undefined : 'field required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    return value.length > maxLength ? `max length is ${maxLength}` : undefined\r\n}","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}: any) => {\r\n    const error = meta.touched && meta.error\r\n    const errorMessage = error ? `${meta.error}` : ' '\r\n    const textareaClass = error ? `${s.errorTextfield}` : undefined\r\n\r\n    return <div className={textareaClass}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        <div className={s.errorBlock}>\r\n            <span className={s.errorMessage}>{errorMessage}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child,...restProps} = props\r\n\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}"],"sourceRoot":""}