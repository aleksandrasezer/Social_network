{"version":3,"sources":["components/navbar/Navbar.module.css","components/profile/MyPosts/Post/Post.module.css","components/dialogs/Dialogs.module.css","components/dialogs/Dialog/Dialog.module.css","components/header/Header.module.css","components/profile/Profile.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/dialogs/messages/Messages.module.css","components/dialogs/messages/Message.module.css","components/header/Header.tsx","components/navbar/Navbar.tsx","components/profile/MyPosts/Post/Post.tsx","components/profile/MyPosts/MyPosts.tsx","components/profile/ProfileInfo/ProfileInfo.tsx","components/profile/Profile.tsx","components/dialogs/messages/Message.tsx","components/dialogs/messages/Messages.tsx","components/dialogs/Dialog/Dialog.tsx","components/dialogs/Dialogs.tsx","App.tsx","reportWebVitals.ts","redux/state.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","navbar","item","activeClassName","activeLink","to","href","Post","props","post","postBody","postAvatar","postText","likeArea","likesCount","MyPosts","myPostsItems","posts","map","el","id","newPostElement","React","createRef","myPosts","onChange","text","current","value","updateNewPostText","newPostText","onClick","addPost","ProfileInfo","img","profileInfo","name","age","aboutMe","Profile","profile","Message","message","Messages","messagesItems","messages","messageText","console","log","Dialog","dialog","activeDialog","Dialogs","dialogsItems","dialogs","App","path","render","state","dialogsPage","profilePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderTree","newPost","push","newText","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.022a4248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2u2Yx\",\"item\":\"Navbar_item__1nEI7\",\"activeLink\":\"Navbar_activeLink__3ePDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__ev8Uz\",\"postBody\":\"Post_postBody__1zq20\",\"postAvatar\":\"Post_postAvatar__3h6-Q\",\"postText\":\"Post_postText__3WMa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2B8uW\",\"dialogsItems\":\"Dialogs_dialogsItems__1_8kw\",\"messages\":\"Dialogs_messages__3eMQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__VVj-X\",\"activeDialog\":\"Dialog_activeDialog__35LJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jfPv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__33M3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2wOLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1Bljo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3K0tN\",\"message\":\"Messages_message__3xkcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1W3KS\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <img src=\"https://www.clipartkey.com/mpngs/m/67-676200_clip-art-pinterest-rick-and-morty-png.png\" alt=\"logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return <div className={s.navbar}>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/profile\">Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.activeLink} to=\"/dialogs\">Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}><a href=\"/feed\">News</a></div>\r\n        <div className={s.item}><a href=\"/music\">Music</a></div>\r\n        <div className={s.item}><a href=\"/settings\">Settings</a></div>\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {postType} from \"../../../../redux/state\";\r\n\r\nfunction Post(props: postType) {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.postBody}>\r\n                <div className={s.postAvatar}>\r\n                    <img src='https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/10/10a06adc92c1746b48b842c031199d692b1ba623_full.jpg'/>\r\n                </div>\r\n                <div className={s.postText}>\r\n                    {props.postText}\r\n                </div>\r\n            </div>\r\n            <div className={s.likeArea}>\r\n                <span>likesCount = {props.likesCount}</span>\r\n                <button>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {postsType} from \"../../../redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: postsType\r\n    addPost: (postMessage: string) => void\r\n    newPostText: string\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n    let myPostsItems = props.posts.map((el) => <Post id={el.id} postText={el.postText} likesCount={el.likesCount}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n    let addPost = () => {\r\n        props.addPost(props.newPostText)\r\n    }\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current ? newPostElement.current.value : '0'\r\n        props.updateNewPostText(text)\r\n    }\r\n    return (\r\n        <div className={s.myPosts}>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    New post\r\n                </div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} value={props.newPostText}/>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                { myPostsItems }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\ntype ProfileInfoPropsType = {\r\n    img: string\r\n    name: string\r\n    age: number\r\n    aboutMe: string\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoPropsType) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.img} alt='my_profile_avatar'/>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                {props.name} <br/>\r\n                {props.age} y.o.<br/>\r\n                {props.aboutMe}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {postsType} from \"../../redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    posts: postsType\r\n    addPost: (postMessage: string) => void\r\n    newPostText: string\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.profile}>\r\n                <ProfileInfo\r\n                    img=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4GXs_w8JLLJc_P90Kojd2Pzj649nHhjymWA&usqp=CAU\"\r\n                    name=\"Aleksandra\"\r\n                    age={28}\r\n                    aboutMe=\"Assigned cool at birth\"/>\r\n            </div>\r\n            <div>\r\n                <MyPosts posts={props.posts}\r\n                         addPost={props.addPost}\r\n                         newPostText={props.newPostText}\r\n                         updateNewPostText={props.updateNewPostText}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Messages.module.css\";\r\nimport Message from \"./Message\";\r\nimport {messagesType} from \"../../../redux/state\";\r\n\r\ntype MessagesPropsType = {\r\n    messages: messagesType\r\n}\r\n\r\nfunction Messages(props: MessagesPropsType) {\r\n    let messagesItems = props.messages.map((el) => <Message id={el.id} message={el.messageText} />)\r\n    console.log(props.messages)\r\n    return (\r\n        <div className={s.messages}>\r\n            {messagesItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nfunction Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.activeDialog} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Messages from \"./messages/Messages\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {dialogsType, messagesType} from \"../../redux/state\";\r\n\r\ntype DialogsPropsType = {\r\n    messages: messagesType\r\n    dialogs: dialogsType\r\n}\r\nfunction Dialogs(props: DialogsPropsType) {\r\n    let dialogsItems = props.dialogs.map((el) => <Dialog id={el.id} name={el.name} />)\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsItems }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Messages messages={props.messages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Profile from \"./components/profile/Profile\";\nimport Dialogs from \"./components/dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {stateType} from \"./redux/state\";\n\ntype AppPropsType = {\n    state: stateType\n    addPost: (postMessage: string) => void\n    updateNewPostText: (newText: string) => void\n}\nfunction App(props: AppPropsType) {\n    return (\n        <BrowserRouter>\n            <div className=\"app_wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app_wrapper_content\">\n                    <Route path='/dialogs' render = {() => <Dialogs dialogs={props.state.dialogsPage.dialogs}\n                                                                    messages={props.state.dialogsPage.messages}/>} />\n                    <Route path='/profile' render = {() => <Profile posts={props.state.profilePage.posts}\n                                                                    addPost={props.addPost}\n                                                                    newPostText={props.state.profilePage.newPostText}\n                                                                    updateNewPostText={props.updateNewPostText}/>} />\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let renderTree = () => {}\r\nexport const subscriber = (observer: () => void) => {\r\n    renderTree = observer\r\n}\r\n\r\nexport type stateType = {\r\n    profilePage: {posts: postsType, newPostText: string}\r\n    dialogsPage: {\r\n        messages: messagesType\r\n        dialogs: dialogsType}\r\n    }\r\nexport type postsType = Array<postType>\r\nexport type postType = {\r\n    id: number\r\n    postText: string\r\n    likesCount: number\r\n}\r\nexport type messagesType = Array<messageType>\r\ntype messageType = {\r\n    id: number\r\n    messageText: string\r\n}\r\nexport type dialogsType = Array<dialogType>\r\ntype dialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nlet state: stateType = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, postText: \"Hello there\", likesCount: 8\r\n            },\r\n            {id: 2, postText: \"It's cold in here\", likesCount: 12\r\n            },\r\n            {id: 3, postText: \"I miss my mom\", likesCount: 35\r\n            },\r\n        ],\r\n        newPostText: 'write something..'},\r\n    dialogsPage: {\r\n        messages: [{id: 1, messageText: \"Hi, how are you?\"},\r\n            {id: 2, messageText: \"Summer is coming!\"},\r\n            {id: 3, messageText: \"Yo\"},\r\n            {id: 4, messageText: \"Yoyo\"}],\r\n        dialogs: [{id: 1, name: \"Tatiana\"},\r\n            {id: 2, name: \"Dasha\"},\r\n            {id: 3, name: \"Victor\"},\r\n            {id: 4, name: \"Ergun\"},]}\r\n\r\n}\r\n\r\nexport const addPost = () => {\r\n    const newPost: postType = {\r\n        id: 5,\r\n        postText: state.profilePage.newPostText,\r\n        likesCount: 0}\r\n    state.profilePage.posts.push(newPost)\r\n    state.profilePage.newPostText = ''\r\n    renderTree()\r\n}\r\nexport const updateNewPostText = (newText: string) => {\r\n    state.profilePage.newPostText = newText\r\n    renderTree()\r\n}\r\n\r\nexport default state;","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport state, {stateType, subscriber} from \"./redux/state\";\nimport {addPost, updateNewPostText} from \"./redux/state\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state} addPost={addPost} updateNewPostText={updateNewPostText}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nsubscriber(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}